@model MyWebApp.ViewModels.ShowProblemViewModel
@{
    ViewBag.Title = "Show";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery-2.1.1.js"></script>
<link href="~/Content/bootstrap-tagsinput.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-tagsinput.js"></script>
<h1 id="title">@Model.Name</h1>
<div class="row">
    <div class="col-md-7">
        @Html.Markdown(@Model.Text)

        @Html.Hidden("problemId", @Model.Id, new { @id = "problemId" })

    </div>
    <div class="col-md-5 ">
        <div class="row">
            <div class="container col-md-2">
                <a class="btn btn-warning">@Model.Category</a>
            </div>
            @if (User.Identity.Name == Model.Author || User.IsInRole("admin"))
            {
                <div class="container col-md-2">
                    @Html.ActionLink("Edit", "Edit", "Problem", new { id = Model.Id }, new { @class = "btn btn-success" })
                </div>
            }
        </div>

        <br />
        <div class="container">
            @Html.TextBoxFor(model => model.TagsString, new Dictionary<string, object> { { "data-role", "tagsinput" }, { "type", "text" }, { "readonly", "" }, { "hidden", "" }, { "style", "maxheight:50px" } })
        </div>
        @if (Model.IsSolved != true && Model.Author != User.Identity.Name && User.Identity.IsAuthenticated)
        {
            <div class="well">
                @using (Html.BeginForm("Show", "Problem"))
                {

                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Answers, "Your answer", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Answers, new { htmlAttributes = new { @class = "form-control", @id = "answers" } })
                                @Html.ValidationMessageFor(model => model.Answers, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.HiddenFor(model => model.Id)
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Send solution" class="btn btn-default" />
                            </div>
                        </div>

                    </div>
                }
            </div>
        }
        else if (!User.Identity.IsAuthenticated)
        {
            <div class="well"> Log in to solve!</div>
        }
        else if (Model.Author == User.Identity.Name)
        {
            <div class="well"> You're autor!</div>
        }
        else
        {
            <div class="well"> You solved it!</div>
        }
        <br />

        <a id="like" class="btn btn-success">Like <span class="badge" id="likeCount">@Model.Likes</span></a>
        <a id="dislike" class="btn btn-danger">Dislike <span class="badge" id="dislikeCount">@Model.Dislikes</span></a>


    </div>
</div>
@if (User.Identity.IsAuthenticated)
{
    <div class="jumbotron">
        <textarea id="commentTextBox" placeholder="Your comment" style="width: 60%"></textarea>
        <br />
        <a id="addComment" class="btn btn-success">Add comment</a>
    </div>
}
<div id="comments" style="width:60%">
    @foreach (var comment in Model.Comments)
    {
        @Html.Partial("_CommentView", comment)
    }
</div>
<script src="/Scripts/problemShowScript.js"></script>
